///////////////////////////////////////
/* プログラム改善点


-----------------------------------
機械学習はGoogleColabで実行.export.pyまで試しておく．
onnxはこれからクラス実装

-----------------------------------
予定
■修論用実験．
	位置精度．
	点群数．
■接触判定スライド，画像取り直し
■新規性，異なる部分
■関連研究要論文
■先行研究まとめ
■今年中に接触判定手法の提案の章までは書く．
■人による評価タスクは多分するけど，そこは相談したうえで，年明け．それまでに準備しておく

-----------------------------------
鉛直キャリブレーション


-----------------------------------
位置精度計測．先端を画面中央に合わせるやり方だと，他パラメータの影響を受けるので，
黄マーカーの位置を元にキャリブレーション,原点に来るように．
先端の計測は一旦おいておいて，

-----------------------------------
姿勢，画角による補正

-----------------------------------


-----------------------------------
実験条件列挙
推定手法の説明スライドおよび論文用の図を準備しておく


-----------------------------------
実用上，どれくらいの角度，視野が必要とされるのかチェック必要


-----------------------------------
RS::class3DPositions_は現状，１つのピクセルを複数のクラスに分類することができないので，
bitで情報を管理したほうが良いかも.
class3DPositions_[h][w] = ∑(1<<classId)


-----------------------------------
YOLODetectorがあまり安全じゃない終了になってるかも．

------------------------------------
ツールがカメラ向き，または画面奥向きの時に位置，姿勢がずれがち．
２つのマーカーの位置関係によって，補正必要そう

------------------------------------
近傍点数基準で考えてきたけど，対象物への距離とかのほうがいい説ある？


------------------------------------
X = [カメラ距離，Nr15, Nr10] Y = touch?
学習用に出力部実装
contact_detectorにtransfrom paramへのポインタ渡しておく．

------------------------------------
接触判定条件の設定
ツール方向，半径，位置関係で近傍点数の変化を再集計
Yellow, Greenの位置確定させる
接触判定精度の判定方法の検討
ひとまず線形SVM試しておく？

-------------------------------------
RSオプション
シャッター速度変えたい，デプスの精度変えられるのか？
RS2_OPTION_TRANSMITTER_FREQUENCY
RS2_OPTION_ACCURACY
現実世界とのキャリブレーション方法
RS座標におけるツール位置と予測位置のキャリブレーション方法








done

-------------------------------------
-----------------------------------
キャリブレーション関数
・rotX,rotY,z
	-->平面検出
・x,y,z
	-->CalibrationCoordinateO
・rotZ
	-->CalibrationRotZ
-----------------------------------
cloudviewer，座標非表示設定追加
	"reference"
-----------------------------------
マーカーと黒い部分の分離方法
	→分離しやすい背景にしてしまったほうが楽．今後の課題としておく．
-----------------------------------
キャリブレーション関数の実装
先端を原点に移動
平行移動させて，同一平面に来るように回転を２点に対し行う
	1 x方向移動して，x=0になるようにz周り回転．その後，z=0になるようにy軸周りに回転
	2 y方向移動して，z=0になるようにx軸周り回転------------------------------------
フィルタはpclで入れる？
	-->pcl2::LastToolPoses_::update()内で平滑化．パラメータ調整必要そう
------------------------------------
姿勢予測時のbit規則変更

マーカー平均点
Y:{(1<<8)+255-1, 0, 0}
G:{(1<<8)+255-2, 0, 0}
B:{(1<<9)+255-3, 255, 0}
P:{(1<<9)+255-4, 255, 0}
YGtip:{(1<<8)+255, 0, 0}
BPtip:{(1<<9)+255, 255, 0}
------------------------------------
現状，３次元空間では，ツールは同時に１つまでしか推定できていない．
青，ピンクマーカーの検出した際は，
	RS::findMarkerで検出
	findTipにif(find[3]&&find[4])追加．
	RGBに(1<<9)を足したうえでvector<int> pointsに挿入
	pcl2で1<<9の確認&鉗子，剪刀用に振り分ける処理追加
------------------------------------
ツールが早く動いたとき，点群と画像のずれにより，背景にマーカーがあると誤認識される．
２マーカー間の距離が遠すぎるときは，除外する．
------------------------------------
TEX鉗子撮影,ラベル付け，再学習

奥向き
ブレ強め
新鉗子
背景テープ
---------------------------------------
背景にマーカー同系色があった場合の対処
	->ZLimitの設定変更,カメラ最近点基準に変更
-------------------------------------
白飛びした際の判別精度が低い
	->背景が暗いとき，相対的にツールが白くなりすぎてしまう．
	--->モデルの再学習により解決
-------------------------------------------
RS::ツール形状，長さに関するパラメータ変更をROS::Paramsに対応させる？
	--->実装済み
------------------------------------
manager内でnumber_of_points変数必要?--
std::vector<int> points.size(), color.size()/3などで良さげ?
	->そもそも使う場面少ないので，気にしなくてよさそう

*/
